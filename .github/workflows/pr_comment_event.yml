
name: Run on PR comment

env:
  CODER_AGENT_WEBHOOK: ${{ vars.CODER_AGENT_URL }}/api/v1/github-comment
  REPOSITORY_URL: ${{ github.server_url }}/${{ github.repository }}

on:
  issue_comment:
    types:
    - created

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: echo comment
        env:
          NUMBER: ${{ github.event.issue.number }}
          BODY: ${{ github.event.comment.body }}
        run: |
          echo A comment on PR ${{ env.NUMBER }} and BODY ${{ env.BODY }} for repository ${{ env.REPOSITORY_URL }}
          echo Webhook push to ${{ env.CODER_AGENT_WEBHOOK }}
      
      - name: Call api to trigger code/tests generation
        id: request-command
        if: ${{ startsWith(github.event.comment.body, '/generate-code') || startsWith(github.event.comment.body, '/generate-tests') }}
        env:
          BODY: ${{ github.event.comment.body }}
        run: |
          { # 'try' block
            STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}" -X POST -H "Content-Type: application/json" \
            -d '{"comment": "${{ env.BODY }}", "repository_url": "${{ env.REPOSITORY_URL}}"}' \
            ${{ env.CODER_AGENT_WEBHOOK }})
          } || { # 'catch' block
            STATUS_CODE="500"
          }
          echo "::set-output name=status_code::$STATUS_CODE"        

      - name: Get command response
        if: ${{ startsWith(github.event.comment.body, '/generate-code') || startsWith(github.event.comment.body, '/generate-tests') }}
        run: echo "${{steps.request-command.outputs.status_code}}"
      
      - name: Command success
        if: ${{ (startsWith(github.event.comment.body, '/generate-code') || startsWith(github.event.comment.body, '/generate-tests')) && steps.request-command.outputs.status_code == '200' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const {owner, repo} = context.issue
            github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "+1",
            });

      - name: Command failure
        if: ${{ (startsWith(github.event.comment.body, '/generate-code') || startsWith(github.event.comment.body, '/generate-tests')) && steps.request-command.outputs.status_code != '200' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const {owner, repo} = context.issue
            github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "-1",
            });          



        
